{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","console","log","reducer","alert열렸니","reducer2","useState","alert","alert변경","useContext","재고context","누른탭변경","스위치","arr","localStorage","getItem","JSON","parse","push","id","Set","setItem","stringify","타이머","setTimeout","clearTimeout","useParams","찾은상품","shoes","find","상품","history","useHistory","className","src","width","title","content","price","onClick","재고변경","dispatch","type","데이터","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"oOAUIA,EAAKC,IAAOC,IAAV,iDAGFC,EAAKF,IAAOG,GAAV,oEAES,SAAAC,GAAK,OAAIA,EAAMC,gBAwG9B,SAASC,EAAWF,GAOhB,OALAG,qBAAU,WACNH,EAAMI,gCAAM,MAIE,IAAdJ,EAAMK,mBACC,gFACc,IAAdL,EAAMK,mBACN,gFACc,IAAdL,EAAMK,mBACN,qFADJ,EAKX,SAASC,EAAKN,GACV,OACI,gDAASA,EAAMO,aAAG,MAwBXC,uBAVf,SAAsBC,GAElB,OADAC,QAAQC,IAAIF,GACL,CACHA,MAAQA,EAAMG,QACdC,0BAAWJ,EAAMK,YAMVN,EA/If,SAAgBR,GAGZ,MAAuBe,oBAAS,GAAhC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA+BF,mBAAS,IAAxC,mBAEA,GAFA,UACQG,qBAAWC,KACAJ,mBAAS,IAA5B,mBAAKV,EAAL,KAAUe,EAAV,KACA,EAAmBL,oBAAS,GAA5B,mBAAKM,EAAL,KAAUjB,EAAV,KAGAD,qBAAU,WACN,IAAImB,EAAMC,aAAaC,QAAQ,YACdF,EAAP,MAAPA,EAAoB,GAAgBG,KAAKC,MAAMJ,IAE9CK,KAAKC,GACTN,EAAM,IAAIO,IAAIP,GACdA,EAAG,YAAOA,GAEVC,aAAaO,QAAQ,UAAWL,KAAKM,UAAUT,MACjD,IAIFnB,qBAAU,WACN,IAAI6B,EAAMC,YAAW,WAAMhB,GAAQ,KAAS,KAC5C,OAAO,WAAOiB,aAAaF,MAE7B,IAIF,IAAMJ,EAAOO,cAAPP,GAEFQ,EAAOpC,EAAMqC,MAAMC,MAAK,SAASC,GACjC,OAAOA,EAAGX,IAAMA,KAGhBY,EAAUC,cAEd,OACI,sBAAKC,UAAU,YAAf,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAIA,UAAU,MAAd,uBAOU,IAAV1B,EACG,qBAAK0B,UAAU,YAAf,SACC,+GAEF,KAIN,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,WAAf,UACA,qBAAKC,IAAI,gDAAgDC,MAAM,SAC3D,sBAAKF,UAAU,gBAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBN,EAAKS,QAC3B,4BAAIT,EAAKU,UACT,8BAAIV,EAAKW,MAAT,YAEA,cAACzC,EAAD,CAAM,eAAIN,EAAMO,eAEhB,wBAAQmC,UAAU,iBAAiBM,QAAU,WAEzChD,EAAMiD,yBAAK,CAAC,EAAG,GAAI,KACnBjD,EAAMkD,SAAS,CAAEC,KAAM,2BAAQC,qBAAM,CAACxB,GAAGQ,EAAKR,GAAIyB,KAAKjB,EAAKS,MAAOS,KAAK,KACxEd,EAAQb,KAAK,UAJjB,sCAOA,wBAAQe,UAAU,iBAAiBM,QAAS,WACxCR,EAAQe,UADZ,8CAQZ,eAAC,IAAD,CAAKb,UAAU,OAAOc,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAM5C,GAAM,GAAQgB,EAAM,IAA/D,sBAEJ,cAAC,IAAIsC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAM5C,GAAM,GAAQgB,EAAM,IAA/D,2BAIR,cAAC,IAAD,CAAeyC,GAAIxC,EAAKyC,WAAW,MAAMC,QAAS,IAAlD,SACI,cAAC7D,EAAD,CAAY,qBAAKG,EAAK,iCAAOD","file":"static/js/4.c5617e43.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Navbar, Container, Nav, NavDropdown, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport {재고context} from './App.js';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n    color : ${ props => props.색상 }\r\n`;\r\n\r\nfunction Detail(props){\r\n\r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n    let 재고 =useContext(재고context);\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        var arr = localStorage.getItem('watched');\r\n        if(arr == null) {arr = []} else{ arr = JSON.parse(arr)}\r\n        \r\n        arr.push(id);\r\n        arr = new Set(arr);\r\n        arr = [...arr];\r\n\r\n        localStorage.setItem('watched', JSON.stringify(arr));\r\n    },[]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        let 타이머 = setTimeout(()=>{ alert변경(false) },2000);\r\n        return ()=> { clearTimeout(타이머) }\r\n        // return function 어쩌구 () {디테일이라는 코드가 사라질 때 실행할 코드}\r\n    },[]);\r\n\r\n    \r\n\r\n    let { id } = useParams();\r\n    \r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n        return 상품.id == id\r\n    });\r\n\r\n    let history = useHistory();\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <박스>\r\n                <제목 className=\"red\" >Detail</제목>\r\n                {/* <제목 색상={'red'} >Detail</제목> */}\r\n            </박스>\r\n\r\n            {/* {inputData} */}\r\n            {/* <input onChange={ (e)=>{ inputData변경(e.target.value) } } /> */}\r\n            {\r\n                alert === true\r\n                ? (<div className=\"my-alert2\">\r\n                    <p>재고가 얼마 남지 않았습니다.</p>\r\n                    </div>)\r\n                : null\r\n            }\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                <img src=\"http://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\"/>\r\n                    <div className=\"col-md-6 mt-4\">\r\n                        <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n                        <p>{찾은상품.content}</p>\r\n                        <p>{찾은상품.price}원</p>\r\n\r\n                        <Info 재고={props.재고}></Info>\r\n\r\n                        <button className=\"btn btn-danger\" onClick={ ()=>{ \r\n                            \r\n                            props.재고변경([9, 11, 12]);\r\n                            props.dispatch({ type: '항목추가', 데이터 : {id:찾은상품.id, name:찾은상품.title, quan:1} });\r\n                            history.push('/cart');\r\n                            \r\n                        } }>주문하기</button>\r\n                        <button className=\"btn btn-danger\" onClick={()=>{\r\n                            history.goBack();\r\n                            // history.push('/');       //특정경로로 이동\r\n                        }}>뒤로가기</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={()=>{ 스위치변경(false); 누른탭변경(0) }}>Active</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={()=>{ 스위치변경(false); 누른탭변경(1) }}>Option 2</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n                <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n            </CSSTransition>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction TabContent(props){\r\n    \r\n    useEffect(()=>{\r\n        props.스위치변경(true);\r\n    })\r\n\r\n\r\n    if (props.누른탭 === 0) {\r\n        return <div>0번째 내용입니다.</div>\r\n    } else if (props.누른탭 === 1) {\r\n        return <div>1번째 내용입니다.</div>\r\n    } else if (props.누른탭 === 2) {\r\n        return <div>2번째 내용입니다.</div>\r\n    }\r\n}\r\n\r\nfunction Info(props){\r\n    return(\r\n        <p>재고 : {props.재고[0]}</p>\r\n    )\r\n}\r\n\r\n// class Detail2 extends React.Component {\r\n//     // 컴포넌트 훅 만드는 방법 옛날 버전\r\n//     componentDidMount(){\r\n\r\n//     }\r\n//     componentWillUnmount(){\r\n\r\n//     }\r\n// }\r\n\r\nfunction state를props화(state){\r\n    console.log(state);\r\n    return {\r\n        state : state.reducer,\r\n        alert열렸니 : state.reducer2\r\n        // 상품명 : state[0].name\r\n    }    \r\n}\r\n\r\n\r\nexport default connect(state를props화)(Detail)\r\n\r\n// export default Detail;"],"sourceRoot":""}